#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <Servo.h>

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64

//Creamos una instancia del objeto de la clase Adafruit_SSD1306 para manejar el display OLED
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

//Creamos una matriz de bits para la imagen que queremos mostrar en el display
const unsigned char epd_bitmap_Proyecto_nuevo[] PROGMEM = {
  
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x03, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x0f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xe0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x3f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xf8, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x60, 0x3f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x07, 0x03, 0xfc, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0xc0, 0x1f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x01, 0xfe, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x01, 0x80, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0xff, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x01, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x7f, 0x80, 0x00, 0x00, 
	0x00, 0x00, 0x03, 0x00, 0x07, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x7f, 0x80, 0x00, 0x00, 
	0x00, 0x00, 0x03, 0x00, 0x07, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x3f, 0x80, 0x00, 0x00, 
	0x00, 0x00, 0x06, 0x00, 0x07, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x3f, 0xc0, 0x00, 0x00, 
	0x00, 0x00, 0x07, 0x00, 0x07, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x3f, 0xc0, 0x00, 0x00, 
	0x00, 0x00, 0x07, 0x00, 0x07, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x7f, 0xc0, 0x00, 0x00, 
	0x00, 0x00, 0x07, 0x00, 0x07, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x7f, 0xc0, 0x00, 0x00, 
	0x00, 0x00, 0x07, 0x80, 0x0f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x7f, 0xc0, 0x00, 0x00, 
	0x00, 0x00, 0x07, 0x80, 0x1f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0xff, 0xc0, 0x00, 0x00, 
	0x00, 0x00, 0x03, 0xe0, 0x3f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x03, 0xff, 0xc0, 0x00, 0x00, 
	0x00, 0x00, 0x03, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0x80, 0x00, 0x00, 
	0x00, 0x00, 0x03, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0x80, 0x00, 0x00, 
	0x00, 0x00, 0x01, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0x80, 0x00, 0x00, 
	0x00, 0x00, 0x01, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0xff, 0x0f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0xfe, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x7f, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf0, 0xfc, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x3f, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf0, 0xf8, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x0f, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xe0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x03, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x01, 0xe0, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x01, 0xe0, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x3f, 0xe0, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x3c, 0xf0, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x78, 0xf8, 0x00, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x07, 0x80, 0x01, 0xf0, 0x7c, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x03, 0xe0, 0x3e, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x03, 0xf0, 0x0f, 0xc0, 0x1f, 0x80, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0x80, 0x0f, 0xfb, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x03, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf8, 0x00, 0x00, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};


int tonePin = 6;
int ledPin1 = 12;
int ledPin2 = 13;
Servo servoMotor1;
Servo servoMotor2;

int counter = 0;

void setup() {
  Serial.begin(9600);
  pinMode(tonePin, OUTPUT);
  servoMotor1.attach(5);
  servoMotor2.attach(3);

  //Inicializamos el display OLED
  Wire.begin();

  // Inicializamos el display OLED con la direcci√≥n I2C correspondiente (en este caso, 0x3C)
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);

  // Limpiamos el buffer del display OLED
  display.clearDisplay();
  
}

void beep(int note, int duration){
  
  //Tocamos el tono en el pin del Zumbador
  tone(tonePin, note, duration);
 
  //Toca diferentes leds y servomotores dependiendo del valor del contador 'counter'
  if(counter % 2 == 0)
  {
    digitalWrite(ledPin1, HIGH);
    servoMotor1.write(90);
    servoMotor2.write(110);
    delay(duration);
    digitalWrite(ledPin1, LOW);
    
  }else
  {
    digitalWrite(ledPin2, HIGH);
    servoMotor1.write(45);
    servoMotor2.write(135);
    delay(duration);
    digitalWrite(ledPin2, LOW);
    
  }
 
  //Detener el tono en el pin del zumbador
  noTone(tonePin);
  delay(50);
 
  //Incrementar el contador
  counter++;
}


void loop() {
  // Dibujamos la imagen en el display OLED
  
  
  // Borramos el display OLED
  display.clearDisplay();

  // Dibujamos la imagen en el display OLED
  display.drawBitmap(0, 0, epd_bitmap_Proyecto_nuevo, SCREEN_WIDTH, SCREEN_HEIGHT, 1);

  // Actualizamos el display OLED
  display.display();

  // Esperamos 5 segundos antes de volver a dibujar la imagen
  delay(5000);
  playMusic();

}

void playMusic() {
  
  beep( 1046, 823.643410853);
  delay(100);
  beep( 932, 174.418604651);
  delay(50);
  beep( 932, 300.387596899);
  delay(50);
  beep( 830, 184.108527132);
  delay(50);
  beep( 830, 184.68992248062);
  delay(50);
  beep( 784, 184.68992248062);
  delay(50);
  beep( 830, 300.178294574);
  delay(319);

  ////

  beep( 698, 184.7596899225);
  delay(100);
  beep( 783, 87.68992248062);
  delay(100);
  beep( 830, 87.2093023256);
  delay(100);
  beep( 932, 184.2093023256);
  delay(100);
  beep( 830, 184.68992248062);
  delay(100);
  beep( 783, 184.68992248062);
  delay(100);

}